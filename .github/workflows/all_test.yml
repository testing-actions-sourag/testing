name: "Testing baby"

on:
  workflow_dispatch:
    inputs:
      pr:
        description: PR Number
        required: false
  # pull_request:
  #   types:
  #     - labeled
  
  # pull_request_target:
  #   types: [opened, edited, reopened]

  # issue_comment:
  
# jobs:
#   runner:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: setup go
#         uses: actions/setup-go@v5
#       - name: Run goreleaser
#         uses: goreleaser/goreleaser-action@v6
#         with:
#           distribution: goreleaser
#           version: 'v2.1.0'
#           args: release --clean --snapshot
#           workdir: './go'
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# jobs:
#   download:
#     runs-on: ubuntu-latest
#     steps:
#       - name: download
#         uses: actions/download-artifact@v4

# jobs:
#   buildx:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set up Docker Buildx
#         uses: crazy-max/ghaction-docker-buildx@v3
#         with:
#           buildx-version: latest
#           qemu-version: latest

# jobs:
#   build:
#     runs-on: windows-latest
#     steps:
#     - name: configure Pagefile
#       uses: al-cheb/configure-pagefile-action@v1.4
#       with:
#         minimum-size: 8GB

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Setup mdBook
#         uses: peaceiris/actions-mdbook@v2
#         with:
#           mdbook-version: 'latest'

## Requires issue_comment
# jobs:
#   remove_label:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions-ecosystem/action-remove-labels@v1
#         with:
#           labels: bug

# jobs:
#   expose_env:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: FranzDiebold/github-env-vars-action@v2
#       - name: Print environment variables
#         run: |
#           echo "CI_REPOSITORY_SLUG=$CI_REPOSITORY_SLUG"


# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#       pull-requests: write
#     steps:
#     - uses: actions/checkout@v4
#       with:
#         persist-credentials: false
#         fetch-depth: 0
#     - name: Create local changes
#       run: |
#         touch testing_testing_testing
#         echo "HAHAHA" >> testing_testing_testing
#     - name: Commit files
#       run: |
#         git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
#         git config --local user.name "github-actions[bot]"
#         git add .
#         git commit -a -m "Add changes"
#     - name: Push changes
#       uses: ad-m/github-push-action@master
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         branch: ${{ github.ref }}


## Set MY_KEY as a repo secret and provide pr number as input
# jobs:
#   auto-approve:
#     runs-on: ubuntu-latest
#     permissions:
#       pull-requests: write
#     steps:
#     - uses: hmarr/auto-approve-action@v4
#       with:
#         pull-request-number: ${{ github.event.inputs.pr }}
#         github-token: ${{ secrets.MY_KEY }}

## Create a branch named weird first
# jobs:
#   mirror_job:
#     runs-on: ubuntu-latest
#     name: Mirror
#     steps:
#     - name: Mirror action step
#       id: mirror
#       uses: google/mirror-branch-action@v1.0
#       with:
#         github-token: ${{ secrets.GITHUB_TOKEN }}
#         source: 'main'
#         dest: 'weird'

## profile.cov file required
# jobs:
#   goveralls:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - uses: shogo82148/actions-goveralls@v1
#         with:
#           path-to-profile: profile.cov


# jobs:
#   setup-py:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-python@v5
#         with:
#           python-version: '3.10'


# jobs:
#   check-perms:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions-cool/check-user-permission@v2

## Change setting to allow workflows to create PR
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Create local changes
#       run: |
#         touch testing_testing_testing
#         echo "HAHAHA" >> testing_testing_testing
#     - name: Create Pull Request
#       uses: peter-evans/create-pull-request@v6

# jobs:
#   install:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: pnpm/action-setup@v4
#         with:
#           version: 8

# jobs:
#   comment:
#     runs-on: ubuntu-latest
#     steps:
#         - name: Create commit comment
#           uses: peter-evans/commit-comment@v3
#           with:
#             body: |
#               This is a multi-line test comment
#               - With GitHub **Markdown** :sparkles:
#             reactions: '+1'

# jobs:
#   caching:
#     runs-on: ubuntu-latest
#     env:
#       extensions: intl, pcov
#       key: cache-v1
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v4

#     - name: Setup cache environment
#       id: extcache
#       uses: shivammathur/cache-extensions@v1
#       with:
#         extensions: ${{ env.extensions }}
#         key: ${{ env.key }}


# jobs:
#   azure-cli:
#     runs-on: ubuntu-latest
#     steps:

#     - name: Azure CLI script
#       uses: azure/cli@v2
#       with:
#         azcliversion: latest
#         inlineScript: |
#           az --version

## global.json required.
# jobs:
#   sdk-update:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: xt0rted/dotnet-sdk-updater@v1.2.0

## PR event with pr labelled with automerge
# jobs:
#   automerge:
#     runs-on: ubuntu-latest
#     permissions:
#           contents: write
#     steps:
#       - id: automerge
#         name: automerge
#         uses: "pascalgn/automerge-action@v0.16.3"
#         env:
#           GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"


## Have to fix this later
# jobs:
#   tsc:
#     name: tsc
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: install node v12
#       uses: actions/setup-node@v4
#       with:
#         node-version: 20
#     - name: yarn install
#       run: yarn install
#     - name: tsc
#       uses: icrawl/action-tsc@v1
#       with:
#         project: ./typescript

# jobs:
#   gotestsum:
#     name: Example gotestsum interaction
#     runs-on: ubuntu-latest
#     steps:
#       - name: Setup gotestsum
#         uses: autero1/action-gotestsum@v2.0.0
#         with:
#           gotestsum_version: 0.4.1

# jobs:
#     ssh-agent:
#         runs-on: ubuntu-latest
#         steps:
#             - uses: actions/checkout@v4
#             - uses: webfactory/ssh-agent@v0.9.0
#               with:
#                   ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

# jobs:
#   downloader:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: robinraju/release-downloader@v1
#         with:
#           repository: 'Mojang/bedrock-samples'
#           latest: true
#           zipBall: true

# jobs:
#   pointer:
#     runs-on: ubuntu-latest
#     steps:
#         - uses: korelstar/phplint-problem-matcher@v1

## pull_request_target part of the event required
# jobs:
#   check-pr-fill:
#     runs-on: ubuntu-latest
#     steps:
#       - name: check fill
#         uses: actions-cool/pr-check-fill@v1
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           filter-start: '|'
#           require-include: 'English'
#           comment-body: 'Check failed.'
#           skip-title-start: 'docs'

jobs:
  deploy-k8:
    runs-on: ubuntu-latest
    steps:
      - uses: Azure/k8s-deploy@v5
        with:
          namespace: 'myapp'
          manifests: |
            dir/manifestsDirectory
          images: 'contoso.azurecr.io/myapp:${{ event.run_id }}'
          imagepullsecrets: |
            image-pull-secret1
            image-pull-secret2
